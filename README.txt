1) Главный экран приложения содержит в себе 2 состояния:

a) Поиск по iTunes
b) Поиск по GitHub
Можно реализовать несколькими способами.

Первый вариант: выделить главный модуль, который содержит внутри себя 2 подмодуля.
Один из которых предоставляет результаты поиска по iTunes, второй GitHub.
То есть суммарно - 3 контроллера.
Минус данного подхода, что оба подмодуля, были бы практически идентичны, за исключением используемого сервиса.
Также в памяти будет висеть лишний контроллер, со всеми зависимостями.
Плюс - каждый модуль отвечает за свою логику. При изменении отображения или получения данных, мы бы меняли только конкретный модуль. Возможность добавления кастомной анимации, нет необходимости получать заново объекты и пересобирать tableview.

Второй вариант: использовать один модуль, но хранить состояние отображения.
Минусом является наличие состояний, недостаточно гибкий подход при возможных будущих изменениях.
Плюсы - меньше кода, немного проще в реализации, отсутствие классов с идентичной логикой.

2) Хранение данных:

Наличие базы данных (например CoreData) в проекте не сильно требуется. 
Данные получаемые с сервера небольшого ограниченного размера, отсутсвует пагинация, о кешировании данных в ТЗ конкретных условий нет.

3) Валидация данных
Объекты с пустыми полями считаются корректными.

4) Тесты
Тесты сделаны реализованы не все.
